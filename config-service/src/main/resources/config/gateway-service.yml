server:
  port: 9180
  # HTTPS
  #  ssl:
  #    enabled: false
  #    key-alias: test
  #    key-password: test
  #    key-store: classpath:www.it99.club.jks
  #    key-store-type: JKS
  #    key-store-provider: SUN
  #    key-store-password: test
spring:
  datasource:
    url: jdbc:mysql://${MYSQL_HOST:139.155.253.119}:${MYSQL_PORT:3306}/${DB_GATEWAY:exam-gateway}?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=CTT&characterEncoding=UTF-8
    username: ${MYSQL_USERNAME:lan}
    password: ${MYSQL_PASSWORD:gmIqB0j8u0937cUc}
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: com.mysql.jdbc.Driver
  redis:
    host: ${REDIS_HOST:139.155.253.119}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:gmIqB0j8u0937cUc}
  rabbitmq:
    host: ${RABBIT_HOST:139.155.253.119}
    port: ${RABBIT_PORT:5672}
    username: ${RABBITMQ_DEFAULT_USER:guest}
    password: ${RABBITMQ_DEFAULT_PASS:guest}
  security:
    # oauth2配置
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://${AUTH_SERVICE_HOST:localhost}:9182/v1/authentication/jwks.json
  boot:
    admin:
      client:
        url: http://${ADMIN_HOST:localhost}:${ADMIN_PORT:9186}/admin
        username: ${ADMIN_USERNAME:admin}
        password: ${ADMIN_PASSWORD:11}
        instance:
          service-base-url: http://${GATEWAY_SERVICE_HOST:localhost}:${server.port}
          metadata:
            tags:
              environment: prd
  # sleuth 配置
  sleuth:
    web:
      client:
        enabled: true
    sampler:
      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。
  # zipkin 配置
  zipkin:
    base-url: http://${ZIPKIN_HOST:139.155.253.119}:${ZIPKIN_PORT:9411}  # 指定了Zipkin服务器的地址

# mybatis配置
mybatis:
  type-aliases-package: com.lanshu.gateway.module
  configuration:
    # 驼峰转换
    map-underscore-to-camel-case: true
    # 延迟加载
    lazy-loading-enabled: true
  mapper-locations: classpath:mapper/*.xml
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql

# 系统配置
sys:
  adminUser: ${ADMIN_USER:admin}  # 管理员账号，默认是admin
  defaultAvatar:
  key: '1234567887654321'
  cacheExpire: 86400 # 缓存失效时间，单位秒，默认一天
  gatewaySecret: ${GATEWAY_SECRET:test}

# feign相关配置
feign:
  httpclient:
    enabled: false
  okhttp:
    enabled: true
  hystrix:
    enabled:  true

# hystrix配置
hystrix:
  shareSecurityContext: true
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 60000
          strategy: SEMAPHORE             # 隔离策略，解决RequestContextHolder.getRequestAttributes()问题

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS

# 提供swagger文档的服务
swagger:
  providers:
    - user-service
    - exam-service
    - auth-service
    - msc-service

ignore:
  urls:
    - /
    - /error
    - /favicon.ico
    - /actuator/**
    - /api/auth/**
    - /api/user/**
    - /api/exam/**
    - /api/msc/**
    - /health
    - /metrics/**
    - /loggers/**

# 演示环境
preview:
  ignores:
    - api/auth  # 授权服务
    - anonymousUser
    - updateInfo
    - updateAvatar
    - attachment
    - api/exam  # 考试服务
    - api/msc

# 集群ID生成配置
cluster:
  workId: ${CLUSTER_WORKID:1}
  dataCenterId: ${CLUSTER_DATA_CENTER_ID:1}